pragma solidity ^0.8.0;
contract A {
  struct A1 { uint x; uint y; };
  function A(bool arg1) public pure { x; };
  function test(bool x) external pure {
    bytes1 b;
    bytes1 _b_1;
    bool[] _b_2;
    bytes32 _b_3;
    uint _b_4;
    uint _b_5;
    b;
    x;
    uint b = 10;
    bytes _b;
    address[] _b_a;
    uint a = 1;
    uint _b_b;
    uint _b_c;
    uint _b_d;
    uint[] _b_e;
    uint[uint] _b_f;
    uint _b_10;
    uint [uint] [_b_11] = [1];
    uint _b_12;
    uint[] _b_13;
    bytes32 _b_14;
    uint _b_15;
    uint128 _b_16;
    uint [uint] _b_17;
    uint _b_18;
    uint [] _b_19;
    uint _b_20;
    uint128 [] _b_21;
    uint _b_22;
    uint [uint] [_b_23];
    uint _b_24;
    union { uint128 a; address b; uint8 c; uint32 d; uint _b_5; int e; uint96 f; } _b_25;
    uint8 _b_26;
    uint8 _b_27;
    uint160 _b_28;
    uint _b_29;
    bytes32 _b_30;
    uint _b_31;
    uint _b_32;
    uint32 _b_33;
    uint _b_34;
    uint [] _b_35;
    string _b_36;
    uint128 [] _b_37;
    uint _b_38;
    uint _b_39;
    bytes _b_40;
    bytes8 _b_41;
    bytes12 _b_
