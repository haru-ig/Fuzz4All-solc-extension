pragma solidity ^0.8.0;
pragma experimental ABIEncoderV2;
contract Mixer50 {
    uint constant H1 = 1;
    uint constant F1 = 2;
    uint constant H2 = 3;
    uint constant F2 = 4;
    bool constant bool1 = true;
    address pub constant ADDRESS1 = 0xDEADBEEF;
    address pub constant ADDRESS2 = 0xFACEBEEF;
    address pub constant ADDRESS3 = 0xBADDFF00;
    address pub constant ADDRESS4 = 0xFACEBEEB;
    bool constant bool2 = true;
    bool constant bool3 = true;
    bool constant bool4 = false;
    bool constant bool5 = false;
    bool constant bool6 = false;
    bool constant bool7 = false;
    uint constant u1 = 100;
    uint constant u2 = 200;
    uint constant u3 = 300;
    uint constant u4 = 400;
    event Ev1(uint h1, uint f1, uint f2);
    event Ev2(uint h2,uint256 f1,uint256 f2,uint256 f3,uint256 h3);
    event Ev3(uint h3, uint256 f1, uint256 f2, uint256 h2);
    function mix(bool,uint, bool2) public {
        uint256 i = 0xF1F2F3F4E;
        MixedContactsExample50.A memory a;
        a.f1 = i;
        a.f2 = i + 1;
