pragma solidity ^0.8.0;
contract MutateSemanticsUsingYulWithSemantics {
    address public mutatedA;
    address public mutatedB;
    address public mutatedC;
    address public mutatedD;
    address public mutatedE;
    address public mutatedF;
    address public mutatedG;
    function mutate1 (address v) public {
    mutatedA = address(1);
    mutatedA = address(2);
    mutatedA = address(a);
    mutatedA = address(a);
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
}
function mutate12 (address v) public {
    mutatedA = address(2);
    mutatedA = address(2);
    mutatedA = address(a);
    mutatedA = address(a);
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
    mutatedA = a;
