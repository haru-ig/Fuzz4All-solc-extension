pragma solidity ^0.8.0;
contract SquashGenerationsUsingYulWithSemantics {
    uint256 public value1;
    uint256 public value2;
    uint256 public value3;
    uint256 public value4;
    uint256 public value5;
    uint256 public value6;
    uint256 public value7;
    uint256 public value8;
    uint256 public value9;
    uint256 public value10;
    uint256 public value11;
    uint256 public value12;
    uint256 public value13;
    uint256 public value14;
    uint256 public value15;

    address public a;
    address public b;
    address public c;
    address public d;
    address public e;
    address public f;
    function update (uint256 v) public {
    value1 = v;
        a = a;
    b = b;
        e = address(0x103);
    value7 =  v;
    value3 = v;
        d = address(0x103);
    value5 = v;
        value9 = v;
        b = a;
    value7 = value8;
        value1 = value5;
        a = data();
        a = a;
    value5 = value7;
        value6 = value3;
        e = value4;
    value13 = value1;
    a = address(a);
        value11 = value9;
    value14 = value6;
        value10 = b;
    a = a;
    value9 = value4;
        value2 = value8;
        value1 = a;
    c = value9;
    c = data();
