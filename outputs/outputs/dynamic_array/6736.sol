pragma solidity ^0.8.0;
pragma experimental ABIEncoderV2;
contract T0F9D_call_data_array_without_initializers {
    uint public val;
    bytes[] public empty;
    bytes4[2] public call1;
    bytes4 call1Empty;
    bytes[] emptyD;
    bytes4[2] emptyD4;
    bytes[] emptyArray;
    bytes[] emptyArray2;
    address[] addresses;
}
function run(uint i) public {
    T0F9C_call_data_array test;
    T0F9D_call_data_array_without_initializers test2;
    bytes memory bytes1 = "this is a byte";
    bytes memory memory1 = bytes1;
    bytes memory empty1 = new bytes(0);
    bytes storage bytes2;
    bytes memory memory2 = bytes2;
    bytes memory empty2 = new bytes(0);
    bytes storage bytes3 = empty3;
    bytes memory memory3 = empty3;
    bytes memory empty4 = new bytes(0);
    bytes storage bytes4;
    bytes memory memory4 = empty4;
    bytes memory empty5 = new bytes(0);
    bytes storage bytes5;
    bytes memory memory5 = empty5;
    bytes memory empty6 = new bytes(0);
    bytes storage bytes6;
    bytes memory memory6 = empty6;
    bytes memory call1_empty = bytes4(0, 0);
    bytes memory[2] memory memory5_test;
    bytes[6] memory memory6_test;
    bytes[12] memory memory7_test;
    bytes32[] memory memory8_test;
    address[] memory memory9_test;
    address[12] memory memory10_test;
    uint256[][] memory memory11_test;
    uint256[32] memory memory12_test;
    address[30] memory memory13_test;
    bytes[5][10] memory memory14_test;
    bytes4[2][3] memory memory15_test;
    bytes32[ 16 ] memory memory16_test;
    bytes4[ 16] memory memory17_test;
    bytes[32][ 64] memory memory18_test;
    bytes[32][ 16] memory memory19_test;
    bytes4[ 16][ 16] memory memory20_test;
