pragma solidity ^0.8.0;
library MyLib {
    function isTrue(uint8 _x) pure public returns(uint) { return 1; }
}
pragma solidity ^0.8.0;
library MyLib {
    function isTrue(string memory _x) pure public returns(uint) { return 1; }
}
function f(uint8 a, uint8 b, uint calldata c, uint[4] memory d, uint[2][2] storage e, uint[2][2][2][2] storage f) public {
    bytes1 b2;
    bytes2;
    bytes3;
    bytes4;
    bytes5;
    bytes6;
    bytes7;
    bytes8;
    bytes9;
    bytes10;
    bytes11;
    bytes12;
    bytes13;
    bytes14;
    bytes15;
    bytes16;
    bytes17;
    bytes18;
    bytes19;
    bytes20;
    bytes21;
    bytes22;
    bytes23;
    bytes24;
    bytes25;
    bytes26;
    bytes27;
    bytes28;
    bytes29;
    bytes30;
    bytes31;
    bytes32;
    bytes33;
    bytes34;
    uint256;
    uint314;
    uint315;
    uint316;
    uint317;
    uint318;
    uint319;
    uint320;
    uint321;
    uint322;
    uint323;
    uint324;
    uint325;
    uint326;
    uint327;
    uint328;
    uint329;
    uint330;
    uint331;
    uint332;
    uint333;
    uint64;
    uint65;
    uint66;
    uint67;
    uint68;
    uint69;
    uint70;
    uint71;
    uint72;
    uint73;
    uint74;
    uint75;
    uint76;
    uint77;
    uint78;
    uint79;
    uint80;
    uint81;
    uint82;
    uint83;
    uint84;
    uint85;
    uint86;
    uint87;
    uint88;
    uint89;
    uint90;
    uint91;
    uint92;
    uint93;
    uint94;
    uint95;
    uint96;
    uint97;
    uint98;
    uint99;
