pragma solidity ^0.8.0;
contract C {
    uint[][][] memory b1;
    constructor (uint[][][] memory arrayA) public {
        uint[][][] memory arrayB = arrayA;
        arrayA[0][0][0] = 13;
        arrayA[0][0][1] = 8;
        arrayB = arrayA;
        arrayA[0][0][1] = 7;
        b1 = arrayA;
        b1 = arrayA;
        arrayA[0][0][1] = 6;
        uint[][]memory arrayC = arrayA;
        uint[][]memory arrayD = arrayA;
        arrayA[0][1][1] = 5;
        uint[][]memory arrayE = arrayA;
        arrayA[1][1][0] = 4;
        arrayD = arrayA;
        arrayA[1][0][0] = 3;
        arrayA[1][0][0] = 2;
        arrayE = arrayA;
        arrayE[1][0][0] = 1;
        arrayA = arrayB;
        object A;
        object B;
        object C;
        uint[][]memory arrayF;
        uint[][]memory arrayG;
        uint[][]memory arrayH;
        object[4][] memory arrayI;
        uint[][] memory arrayJ;
        arrayI[0][2] = "abc";
        arrayI[0][2] = "xyz";
        object[] memory A;
        arrayI = arrayI;
        A = arrayI;
        A = "abc";
        B = "xyz";
        C = "abc";
        arrayB[1][0][0] = "abc";
        arrayB[1][0][0] = "xyz";
        object[] memory B;
        arrayB = arrayB;
