pragma solidity ^0.8.0;
contract EquivalentSemi {
    function x() public pure returns (uint) {
        uint x;
        x = 16579;
        return x;
    }
}
contract Callees {
    EquivalentSolidity _d;
    constructor() {
        _d = new EquivalentSolidity();
    }
    bytes32 internal constant signature1 =
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            ^ keccak256("\x6b\x65\x79\x73\x74\x65\x6d\x73\x20\x63\x61\x6e\x63\x65");
    bytes32 internal constant signature2 =
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            ^ keccak256("\x6d\x73\x20\x6c\x61\x72\x67\x65\x72\x20\x65\x74\x20\x72\x65\x63");
    bytes32 internal constant signature3 =
        "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
            ^ keccak256("\x73\x79\x73\x74\x65\x6d\x73\x20\x65\x73\x74\x61\
