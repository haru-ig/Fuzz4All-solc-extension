pragma solidity ^0.8.0;
contract AssignmentModulation_V2 {
    uint[] public x;
    uint i;
    event log(uint x);
    constructor () public {
        x = new uint[](2);
    }
    function doWork() payable public returns(uint){
        x[1];
        log(x[1]);
        x[0];
        log(x[0]);
        x[1];
        log(x[1]);
        x[1];
        log(x[1]);
        i = 1;
        x[1];
        log(x[1]);
        i = 1;
        x[0];
        log(x[0]);
        i = 1;
        x[0];
        log(x[0]);
        x[0];
        i = 1;
        x[0];
        log(x[0]);
        i = 1;
        x[1];
        log(x[1]);
        x[2];
        i = 1;
        x[2];
        log(x[2]);
        x[1];
        log(x[1]);
        i = 1;
        x[0];
        log(x[0]);
        x[1];
        log(x[1]);
        x[0];
        log(x[0]);
        i = 1;
        x[1];
        log(x[1]);
        x[1];
        log(x[1]);
        x[1];
        log(x[1]);
        i = 1;
        x[0];
        log(x[0]);
        x[0];
        log(x[0]);
        x[1];
        log(x[1]);
        x[0];
        log(x[0]);
        i = 1;
        x[2];
        log(x[2]);
        x[0];
        log(x[0]);
        x[0];
        log(x[0]);
        x[1];
        log(x[1]);
        i = 1;
        x[3];
        log(x[3]);
        x[0];
        log(x[0]);
        x[1];
        log(x[1]);
        x[2];
        log(x[2]);
        x[1];
        log(x[1]);
        i = 1;
        x[3];
        log
