pragma solidity ^0.8.0;
contract NoReturn {
    address public address1;
    uint public integer1;
    uint public integer2;
    uint public integer3;
    uint public integer4;
    uint public integer5;
    uint public integer6;
    uint public integer7;
    uint public integer8;
    uint[] public integerArr1;
    uint[2] public integer2_arr;
    uint public integer3_arr;
    uint public integer4_arr;
    uint public integer5_arr;
    uint public integer6_arr;
    uint public integer7_arr;
    uint public integer8_arr;
    uint[] public integerArr2;
    uint[2] public integer2_arr2;
    uint public integer3_arr2;
    uint public integer4_arr2;
    uint public integer5_arr2;
    uint public integer6_arr2;
    uint public integer7_arr2;
    uint public integer8_arr2;
    uint[] public integerArr3;
    uint[2] public integer2_arr3;
    uint[2] public integer2_arr3_arr;
    uint public integer3_arr2;
    uint[2] public integer2_arr3_arr2;
    mapping (uint => bool) private boolArr;
    mapping(uint => uint[]) private arr1;
    mapping(uint => uint[2]) public arr1_arr;
    mapping(uint => bytes) private bytesArr;
    mapping(uint => bytes[2]) public bytesArr_bytes;
    mapping(uint => bytes32) private bytes32Arr;
    mapping(uint => bytes32[2]) public bytes32Arr_bytes;
    mapping(uint => bytes[20]) public bytes_bytes;
    uint public constant MIN_VALUE = 1 ether;
}
pragma solidity ^0.8
