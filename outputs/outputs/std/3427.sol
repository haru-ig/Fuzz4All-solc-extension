pragma solidity ^0.8.0;
import "./ConvertMutator.sol";
contract MutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator {
  uint[] numbers;
  function add() {
    uint x = ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toUint(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toHex(_));
    uint y = ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toUint(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toHex(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toString(_)));
    numbers.push(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.add(x,y));
  }

  function getResult() {
    uint size = ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toUint(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toHex(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toString(numbers))));
    uint sum = ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toUint(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toHex(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toString(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.sumNumbers(numbers)))));
    uint min = ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toUint(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toHex(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.findMinimum(numbers))));
    uint max = ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toUint(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.toHex(ConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutatorConvertMutator.findMaximum(numbers))));
  }

  function sumNumbers(uint[] memory nums) returns (uint) {
    uint sum = 0;
    for (uint i = 0; i < nums.length; i++) {
