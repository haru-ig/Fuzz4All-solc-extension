pragma solidity ^0.8.0;
contract Mutates {
  address payable y;
  uint public x;
  uint public balance;
  uint yAddress;
  uint zAddress;
  uint48 yInt;
  uint zInt;
  function xInt(uint48 a) public returns (uint48) { return a * 2; }
  function getBalance() public returns(uint48) { return balance; }
  uint[] public array1;
  uint[] public array2;
  uint yIndex;
  uint zIndex;
  function updateBalances(uint a, uint b) public {
    a;
    b;
    if (true) return;
    if (false) return;
    if (x >= c) return;
    if (x < b) return;
    if (0 < x) return;
    balance += a;
    yAddress = payable(address(address(zInt), 0));
    y = yAddress;
    balance;
    y.transfer(b);
    y;
    y.transfer(2 * b);
    yInt;
    zIndex = zAddress;
    y.transfer(yInt);
    x = zInt;
    zInt;
    x = 2 * zInt;
    zInt + zInt;
    x = 2 * x;
    x = 2 * x;
    y;
    x = zAddress;
    x = xAddress;
    x < y;
    z;
    z = xInt;
    array1[yIndex++] = zInt;
    y.transfer(x);
    z;
    z = -1;
    zInt;
    x;
    xInt(z);
    x;
    xInt(y);
    y;
    xInt(y);
    y;
    zInt + 2;
    zInt + zInt;
    zInt + 2;
    z;
    x + y;
    x - 2;
    x;
    y + x;
    x * y;
    x / y;
    x % y;
    z + 2;
    z - 1;
    z - zInt;
    z - 2;
    zInt + 1;
    x;
    x == zInt;
    if (!zInt) return;
    x > zInt;
    zInt == 0;
    zInt - 2;
    y.transfer(yInt);
    x > 42;
    x + x;
    x * 3;
    x / 2;
    x % 4;
    x / -2;
    x;
  }

  x += x;
  x += y;
  x -= 7;
  x *= -65536;
  y;
  y *= -1;
  x;
  x = 1 / 0;
  x = 1 / 1;
  x = x - 1;
  x *= -1;
  x %= -5;
  x % 3;
  x % 1;
  x % 2;
  x;
  x == x;
  x!= x
