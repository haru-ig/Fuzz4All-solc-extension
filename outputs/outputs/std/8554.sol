pragma solidity ^0.8.0;
contract MutationEquivalence
{
  constructor() {

    [storageArray[1] = 1][420000000000000000000000000000000] = 59;
    new Array(new Array[](420000000000000000000000000000000))[99999999999999999999999999999999] = new Array[](0);

    [storageArray[1] = 1][storageArray[4200000000000000000000000000000000]] = 59;
    new Array(new Array[](42000000000000000000000000000000))[9999999999999999999999999999999] = new Array[](0);

    int myInt = 420000000000000000000000000000000;
    storageArray[myInt / 42000000000000000000000000000000] = 1;
    new Array(new Array[](420000000000000000000000000000000))[myInt / 9999999999999999999999999999999999] = new Array[](0);

    [storageArray[storageArray.length - 420000000000000000000000000000000] = 1][storageArray[1]] = 59;
    new Array(new Array[](420000000000000000000000000000000))[storageArray.length / 99999999999999999999999999999
