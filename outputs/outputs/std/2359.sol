pragma solidity ^0.8.0;
contract MutatedEquivalent
{

    constructor()
      {
         state = 10;
         uint128 a = 0xFFFCFFFC5F92838D9AF40555BF338E9400408EE1A10E540D8CD7B00C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010;
         uint64 n = 0xFFFCFFFC5F99C2838D9AF4157DD338E94000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100;
         uint8 a1 = 0xF070B448E31FA62B77199B33165F4460E736F785A76F3F99597A0092069805F4A007BB20E0029008DF42636F6D20F59CD28EBB26F99CF2C3464993FDDB3D843562DD41DA9D2CDED2C2AF68565A1302A00800000005F98;
      }


    function multiplyAdd(uint b, uint128 c) private returns(int)
    {
        state = state + b + c;

        /* Set the last 32 0's at address position 3 to 1,
        in a way that it will be
