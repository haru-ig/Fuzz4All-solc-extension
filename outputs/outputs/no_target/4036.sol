pragma solidity ^0.8.0;
contract Vulneratr2 { uint public y; function f() public { y = y + 4294967296; } }
contract Vulneratr3 { uint public x; function f() public { uint b; uint c; uint d; bool e; assembly { b := add(add(x, x), b) } x = b; assembly { c := sub(add(c, c), b) } x = add(b, c); assembly { d := sub(sub(sub(sub(b, c), b), c), c), b) } x = add(x, d); assembly { e := sub(sub(add(sub(add(d, e), d), sub(d, e)), d), sub(sub(sub(sub(sub(c, e), sub(sub(c, e)), c), c), c), b) } x = add(x, e); } }
contract Vulneratr4 { uint public b; uint public c; uint public d; bool public e; address public c1; uint public b1; uint public c2; uint public d1; bool public e1; uint public b3; uint public c3; uint public d3; bool public e3; uint public b6; uint public c6; uint public d6; bool public e6; uint public b5; uint public c5; uint public d5; bool public e5; uint public b4; uint public c4; uint public d4; bool public e4; uint public b7; uint public c7; uint public d7; bool public e7; uint public b8; uint public c8; uint public d8; bool public e8; uint public b9; uint public c9; uint public d9; bool public e9; uint public ba; uint public cb; uint public db; bool public eb; uint public bb; uint public cc; uint public dd; bool public ed; bool public de; bool public e91; uint public b10; uint public c10; uint public d10; bool public e10; bool public ge; bool public he; bool public ge1; bool public he1; bool public ge2; bool public he2; bool public ge3; bool public he3; bool public ge4; bool public he4; uint public b11; uint public c11; uint public d11; bool public e11; uint public b12; uint public c12; uint public d12; bool public e12; uint public b13; uint public c13; uint public d13; bool public e13; uint public b14; uint public c14; uint public d14; bool public e14; uint public b15; uint public c15; uint public d15; bool public e15; uint public b16;
