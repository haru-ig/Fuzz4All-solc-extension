pragma solidity ^0.8.0;
contract mutationsolidity_legacycontracts0822 { function doSomething(uint x, uint y, uint z) public { q = x + y * 10; }    function doSomething(uint x, uint y, uint z1) pure public { q = x; }    function doSomething(uint x, uint y, uint z2) pure public { z = x * y * z2; }    function doSomething(uint x, uint y, uint z3) pure public { q += z3 * x; }    function doSomething(uint x, uint y, uint z4) pure public { q += x; z = x * x + y + x * x * y + x * 2; }    function returnSomething() view public returns(uint) { return q * 10 + x; }    function returnSomething2() view public returns(uint,uint,uint) { return q, x; }    function returnSomething3() view public returns(uint) { return q; }    function returnSomething4() view public returns(uint,uint,uint,uint) { return q * 2, x, p, z; }    function returnSomething5() view public returns(uint,uint,uint,uint,uint) { return q, x * 10, p + z3, x * p * z, x; }   }
contract mutationsolidity_legacycontracts0822b{ uint x;    uint p; uint q; uint z; }

pragma solidity ^0.8.0;
contract mutationsolidity_legacycontracts0822b{ function doSomething(uint x, uint y) public { q = x + y * 10; }    function doSomething(uint x, uint y, uint z1) pure public { q += x; }    function doSomethingPure(uint x, uint y, uint z1) public pure { q += x * y; }    function doSomething(uint x, uint y, uint z2) pure public { z = x * y * z2; }    function doSomething(uint x, uint y, uint z3) pure public { q += z3 * x; }    function doSomething(uint x, uint y, uint z4) pure public { q += x; z = x * x + y + x * x * y + x * 2; }    function returnSomething() view public returns(uint) { return q * 10 + z; }    function returnSomething2() view public returns(uint) { return q; }    function returnSomething3() view public returns(uint,uint) { return z, q * 10; }    function returnSomething4() view public returns(uint) { return q; }    function returnSomething5() view public returns(uint,uint,uint) { return z, q, p * 10; }    function returnSomething6() view public
