pragma solidity ^0.8.0;
 interface I {} struct U { I e; I f; } struct E { I e; I f; } struct C { E v; uint256 x; uint320 n; } struct D { C w; uint328 v; } struct G { C w; uint328 v; E d; uint165 f; } contract C { mapping(uint => D) public a; E public b; uint public c; uint indexed z; C.D memory.g; bytes48 h; E.E memory.l; mapping(uint => U.E) public m; G memory.k; uint256.z memory.i; }
interface I {} contract C { uint256 public a; E public b; uint public c; uint indexed z; bytes32 h; E.E memory.l; mapping(uint => U.E) public m; G memory.k; uint.z memory.i; } contract D {} contract G { uint256 public a; E.E memory.b; uint public c; uint indexed z; bytes32 h; E.E.E memory.x; mapping(uint => U.E) public m; G.C memory.k; uint256.z memory.i; G memory.d.e; } struct A { mapping(uint => U.E) public x; E public y; uint indexed z; }
