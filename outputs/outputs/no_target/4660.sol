pragma solidity ^0.8.0;
contract C {
constructor() public {
	bytes memory b = hex"F3696400";
	bytes memory bb = hex"F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3FF3F0000";
	bool b2;
	assembly {
		bb := add(bb, b)
		b2 := b is 0xf3F3F3F3F3F3F3F3f3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3FF3F0000
		bb := iszero(add(b, b))
		bb := and(b, b)
		b2 := iszero(and(b, b))
		bb := or(b, b)
		b2 := iszero(or(b, b))
		bb is b2
	}
	assembly {
		bb := and(0xf3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3f3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3FF3F0000, b)
		bb := and(0xf3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3FF3F0000, b is 0xf3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3FF3F0000)
	}
	bytes memory c;
