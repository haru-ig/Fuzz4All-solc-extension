pragma solidity ^0.8.0;
contract EquivalentABIv2SemanticsAreMutated6{
    uint constant private uint1 = 0;
    uint constant private uint2 = 0;
    uint constant private uint17 = 17;
    uint constant private uint3 = 3;
    mapping(bytes32 => uint) public _balances;
    uint public _Value84;
    uint private _value80;
    uint private  _result;
    uint private _Value;
    mapping(address => uint) public _balances2;
    uint constant private _Value23 = 23;
    uint private _Value18;
    uint public _Value90;
    uint public _Value86;
    uint constant _Value92 = 92;
    uint constant _Value184 = 184;
    uint constant _Value8 = 8;
    uint constant private _Value31 = 31;
    uint constant _Value30 = 30;
    uint constant private _Value46 = 46;
    uint public _Value21;
    uint constant _Value185 = 185;
    uint constant _Value199 = 199;
    mapping(address => uint) public _balances4;
    uint constant private _Value35 = 35;
    uint private _Value89;
    uint constant _Value115 = 115;
    uint constant _Value132 = 132;
    uint public _value34;
    uint private _Value7;
    uint public _value82;
    uint private  _value65;
    mapping(address => uint) public _balances3;
    uint private _value44;
    uint private _value91;
    uint public _value93;
    uint private _value81;
    uint private _value66;
    mapping(address => uint) public _balances5;
    uint public _value69;
    uint private _value83;
    uint private  _value67;
    uint private  _value72;
    uint constant _Value99 = 99;

    constructor () public { }
    function test () public returns (uint) {
        uint _result = uint1;
         _result = uint2;
         _result = uint3;
        _result = uint4;
        _result = uint7;
        _result = uint8;
        _result = uint17;
        _result = uint18;
        _result = uint31;
        _result = uint16;
        _result = uint30;
        _result = uint9;
        _result =
