pragma solidity ^0.8.0;
 struct A { uint256 x; } struct B { uint8 y; } struct C { uint8 z; } struct D { uint256 x; uint8 y; uint8 z; }
contract test1 { uint8 x; uint8 y; uint8 z; uint8 q; uint8 r; uint8 s; uint8 t; uint8 u; uint8 v; uint8 w; uint8 x; }
assembly { let r_asm := 0x000; let s_asm := 0x000; let t_asm := 0x000; let u_asm := 0x000; let v_asm := 0x000; let w_asm := 0x000; let x_asm := 0x000; let q_asm := 0x000; let r0 := mload(0x40); let s0 := mload(0x44); let t0 := mload(0x48); let u0 := mload(0x4c); let v0 := mload(0x50); let w0 := mload(0x54); let q0 := mload(0x58); let r1 := add(r0, r_asm); let u1 := add(u0, u_asm); let v1 := add(v0, v_asm); let w1 := add(w0, w_asm); let q1 := add(q0, q_asm); let b := eq(eq(eq(eq(eq(eq(eq(r1, s0), eq0), eq3), r4), eq4), eq5), r6); mstore(0xc0, b); let b := eq(eq(eq(eq(eq(eq(eq(r1, s0), r6), eq6), eq8), eq9), r10), r11); mstore(0xc4, b); let b := eq(eq(eq(eq(eq(eq(eq(r1, s0), r6), eq6), eq8), r8), eq9), r10); mstore(0xc8, b); let b := eq(eq(eq(eq(eq(eq(eq(r1, r11), r6), eq6), eq8), r8), eq9), r11); mstore(0xcc, b); let b := eq(eq(eq(eq(r1, eq0), eq3), r4), eq5); mstore(0xd0, b); let b := eq(eq(eq(eq(eq(r1, eq0), r4), r6), eq6), r8); mstore(0xd4, b); let b := eq(eq(eq(eq(r1, eq0
