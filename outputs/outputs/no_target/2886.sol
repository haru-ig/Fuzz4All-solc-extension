pragma solidity ^0.8.0;
contract mutated{
    uint val;
    constructor(uint a) public {
        a += 3;
        val += 3;
        a += 3;
        val += 4;
    }
    modifier a() {
        a += 2;
        a += 2;
        a += 2;
        val += 2;
        val += 2;
        val += 3;
        a += 2;
        a += 3;
        a += 2;
        val += 2;
        val += 3;
        val += 2;
        a += 2;
        a += 3;
        a += 2;
        val += 2;
        val += 3;
        val += 2;
    }
    modifier b() {
        assert(false);
    }
    function c(uint a) public view {
        val += a;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 2;
        a += 2;
        a += 2;
        val += a;
        a += 1;
        a += 2;
        a += 2;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 1;
        a += 2;
        a += 2;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 1;
        a += 2;
        a += 2;
        a += 1;
        a += 1;
        a += 1;
        val += a;
        a += 2;
        a += 2;
        a += 2;
        val += a;
        a += 2;
        a += 2;
        a += 2;
        val += a;
        a += 2;
        a += 2;
        a += 2;
        val += a;
        a += 1;
        a += 2;
        a += 2;
        a += 1;
        a += 1;
        a += 1;
        val += a;
