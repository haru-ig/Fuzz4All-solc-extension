pragma solidity ^0.8.0;
contract Mutate0016a is Mutate0015b {
    uint256 input;
    uint256 input_a;
    uint256 input_e;
    uint256 input_f;
    uint256 input_g;
    uint256 input_j;
    uint256 input_k;
    uint256 input_m;
    uint256 input_l;
    uint256 input_n;
    uint256 input_p;
    uint256 input_q;
    uint256 input_r;
    uint256 input_t;
    uint256 input_s;
    uint256 input_u;
    uint256 input_x;
    uint256 input_y;
    uint256 input_z;
    uint256 input_108;
    uint256 input_106;
    uint256 input_104;
    uint256 input_1;
    uint256 input_3;
    uint256 input_5;
    uint256 input_7;
    uint256 input_8;
    uint256 input_9;
    uint256 output;
    constructor () {
        input = 6;
        input_a = input * (input + 1);
        input_e = input_a * (input_a + 1);
        input_f = input_e * (input_e + 1);
        input_g = input_f * (input_f + 1);
        input_j = input_g * (input_g + 1);
        input_k = input_j * (input_j + 1);
        input_m = input_k * (input_k + 1);
        input_l = input_m * (input_m + 1);
        input_n = input_l * (input_l + 1);
        input_p = input_n * (input_n + 1);
        input_q = input_p * (input_p + 1);
        input_r = input_q * (input_q + 1);
        input_t = input_r * (input_r + 1);
        input_s = input_t * (input_t + 1);
        input_u = input_s * (input_s + 1);
        input_x = input_u * (input_u + 1);
        input_y = input_x * (input_x + 1);
        input_z = input_y * (input_y + 1);
        input_108 = input_z * (input_z + 1);
        input_106 = input_108 * (input_108 + 1
