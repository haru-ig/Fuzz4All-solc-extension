pragma solidity ^0.8.0;
contract S { function D(uint256 a) public pure {a = 1000000; } }
contract M0 { function D(uint256 a) public pure {a *= 1000000; } }
contract D { function D(uint256 a) public pure {a /= 1000000; } }
contract M1 { function D(uint256 a) public pure {a %= 1000000; } }
contract G { function D(uint256 a) public pure {a <<= 1000000; } }
contract M2 { function D(uint256 a) public pure {a >>= 1000000; } }
contract L { function D(uint256 a) public pure {a >>= 2000000; } }
contract M3 { function D(uint256 a) public pure {a >>>= 2000000; } }
contract M4 { function D(uint256 a) public pure {a * 2000000; } }
contract HX2 { function G(uint256 a) public pure {a + 1000000; } }
contract G0 { function G(uint256 a) public pure {a - 1000000; } }
contract M5 { function G(uint256 a) public pure {a * 1000000; } }
contract H0 { function G(uint256 a) public pure {a / 1000000; } }
contract H4 { function G(uint256 a) public pure {a % 1000000; } }
contract JH { function G(uint256 a) public pure {a << 1000000; } }
contract JG { function G(uint256 a) public pure {a >> 1000000; } }
contract JH4 { function G(uint256 a) public pure {a >>> 1000000; } }
contract J { function G(uint256 a) public pure {a - 1; } }
