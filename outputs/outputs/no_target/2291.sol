pragma solidity ^0.8.0;
contract mutation0b16 {

    function test() public pure {
        bytes memory temp = new bytes(32);
        bytes mem_1 = hex"e55a2dd592040b869060b068577958549056746876dd65decf7a88b3b9a95f84";
        bytes mem_2 = hex"5060604052341561000357600080fd5b506040516100116000396000f3fe60806100236000357c01000000000000000000000000000000000000000000000000000000900463ffffffff168063b4e38fc1146044575b600080fd5b3415605857600080fd5b50607e60405260600020905b80601f016020809104026020016040519081016040528093929190803590602080800190601f0160208091040260200160405180838360005b8381101560725780821560765780516073565b82811115605f5760ac02000490047302000000000000000000000000000000000000000000000000000900473ffffffffffffffffffffffffffffffffffffffffffffffffffffffff1601580d4e5506293672154363c9d327452da80029";
        bytes mem_3 = hex"0172";
        while (mem_1.length == mem_1.length + 219) {
            bytes mem_4 = hex"800000000000000000000000
