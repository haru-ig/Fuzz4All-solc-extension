pragma solidity ^0.8.0;
contract SemanticEquivalent
{
  function test() public pure returns (uint8, uint256, uint64, uint128) {
    uint32 _0x1=1;
    uint32 _0x2=2;
    uint32 _0x3=3;
    uint64 _0x4=4;
    uint64 _0x5=5;
    uint64 _0x6=6;
    uint64 _0x7=130000;
    uint32 _0x8=_0x1;
    uint32 _0x9=_0x2;
    uint32 _0xa=_0x3;
    uint64 _0xb=_0x4;
    uint64 _0xc=_0x5;
    uint64 _0xd=_0x6;
    uint64 _0xe=_0x7;
    uint32 _0xf=_0x8;
    uint32 _0x10=_0x9;
    uint32 _0x11=_0xa;
    uint64 _0x12=_0xb;
    uint64 _0x13=_0xc;
    uint64 _0x14=_0xd;
    uint64 _0x15=_0xe;
    uint32 _0x16=_0xf;
    uint32 _0x17=_0x10;
    uint32 _0x18=_0x11;
    uint64 _0x19=_0x12;
    uint64 _0x1a=_0x13;
    uint64 _0x1b=_0x14;
    uint64 _0x1c=_0x15;
    uint32 _0x1d=_0x16;
    uint32 _0x1e=1;
    uint32 _0x1f=2;
    uint32 _0x20=3;
    uint128 _0x21=4;
    uint128 _0x22=5;
    uint128 _0x23=6;
    int8 _0x24=48;
    int8 _0x25=49;
    int8 _0x26=50;
    int32 _0x27=63;
    int32 _0x28=64;
    int32 _0x29=65;
    int32 _0x2a=66;
    int8 _0x2b=48;
    int8 _0x2c=49;
    int8 _0x2d=50;
    bool _0x2e=false;
    int16 _0x2f
