pragma solidity ^0.8.0;
contract C1 {
    C2 c;
    constructor() {
        require((address(c).balance / 1 ether) > 0);
    }
}
contract Caller {
    bytes memory constant bytecode = hex"608060405234801561001057600080fd5b34801561002057600080fd5b60405173_1000_0_60ef206000396000f300608060405234801561001057600080fd5b34801561002057600080fd5b";

    function call() public pure {
        assembly {
            let msize := mload(0x40)
            mstore(0xb00000, 0xc90000000000000000000000000000000000000000000000000000000000000070)
            mstore(0xb00018, 0x000000000000000000000000000000000000000000000000000000000000000000)
            mstore(0xb00030, 0x0000000000000000000000000000000000000000000000000000000000000000003e8)
            mstore(0xb00048, 0x0000000000000000000000000000000000000000000000000000000000000000000008070)

            mstore8(0xb00060, add(mload(0xb00050), add(mload(0xb00040), mload(0xb
